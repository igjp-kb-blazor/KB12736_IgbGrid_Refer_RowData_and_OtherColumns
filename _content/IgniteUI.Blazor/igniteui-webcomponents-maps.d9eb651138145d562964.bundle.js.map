{"version":3,"file":"igniteui-webcomponents-maps.d9eb651138145d562964.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-charts/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tog(): void {\r\n\t\tsuper.og();\r\n\t\tif (this.t3 != null) {\r\n\t\t\tthis.t3.og();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.t3 = this.t2();\r\n\t}\r\n\tprivate t1: Series = null;\r\n\tprotected get_eq(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tju(a: any, b: string): any {\r\n\t\tlet c = this.lv(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.t3.ju(a, b);\r\n\t}\r\n\tds(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean {\r\n\t\treturn this.t3.ds(a, b, c, d);\r\n\t}\r\n\tag(): Axis[] {\r\n\t\treturn this.t3.ag();\r\n\t}\r\n\tbj(): Series {\r\n\t\treturn this.t3;\r\n\t}\r\n\tget t3(): Series {\r\n\t\treturn this.t1;\r\n\t}\r\n\tset t3(a: Series) {\r\n\t\tlet b: boolean = this.t3 != a;\r\n\t\tif (b) {\r\n\t\t\tthis.t1 = a;\r\n\t\t\tthis.t8();\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.t3.hasMarkers;\r\n\t}\r\n\tprotected t8(): void {\r\n\t\tif (this.t1 != null) {\r\n\t\t\tlet hostedSeries_ = this.t1;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.nr(this.t3);\r\n\t\tthis.t4.b5();\r\n\t}\r\n\tax(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.az(this.t3, a, b, c);\r\n\t}\r\n\tay(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.a0(this.t3, a, b, c);\r\n\t}\r\n\tjr(a: Point): any {\r\n\t\treturn this.jx(this.t3, a);\r\n\t}\r\n\tjf(a: Point, b: boolean): number {\r\n\t\treturn this.t3.jf(a, b);\r\n\t}\r\n\tjd(a: Point, b: boolean): number {\r\n\t\treturn this.t3.jd(a, b);\r\n\t}\r\n\th9(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.t3.h9(a, b, c);\r\n\t}\r\n\tth(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.t3.th(a, b, c);\r\n\t}\r\n\tts(a: Point): Rect {\r\n\t\treturn this.t3.ts(a);\r\n\t}\r\n\tak(a: Point): Rect[] {\r\n\t\treturn this.t3.ak(a);\r\n\t}\r\n\ttt(a: Point): Rect {\r\n\t\treturn this.t3.tt(a);\r\n\t}\r\n\tal(a: Point): Rect[] {\r\n\t\treturn this.t3.al(a);\r\n\t}\r\n\ttu(a: Point): Rect {\r\n\t\treturn this.t3.tu(a);\r\n\t}\r\n\ttv(a: Point): Rect {\r\n\t\treturn this.t3.tv(a);\r\n\t}\r\n\th5(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.t3.h5(a, b, c);\r\n\t}\r\n\ttd(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.t3.td(a, b, c);\r\n\t}\r\n\th7(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.h9(a, b, c);\r\n\t}\r\n\ttf(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.t3.tf(a, b, c);\r\n\t}\r\n\tti(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.t3.ti(a, b, c);\r\n\t}\r\n\tia(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.t3.ia(a, b, c);\r\n\t}\r\n\tte(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.t3.te(a, b, c);\r\n\t}\r\n\th6(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.t3.h6(a, b, c);\r\n\t}\r\n\ttg(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.t3.tg(a, b, c);\r\n\t}\r\n\th8(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.t3.h8(a, b, c);\r\n\t}\r\n\ti9(a: Point): number {\r\n\t\treturn this.t3.i9(a);\r\n\t}\r\n\th0(): number {\r\n\t\treturn this.t3.h0();\r\n\t}\r\n\thw(a: Point): number {\r\n\t\treturn this.t3.hw(a);\r\n\t}\r\n\tjs(a: Point): any {\r\n\t\treturn this.t3.js(a);\r\n\t}\r\n\tprotected abstract t2(): Series;\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.t4 = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tt4: HostSeriesView;\r\n\tstatic readonly ua: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget t5(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.ua);\r\n\t}\r\n\tset t5(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.ua, a);\r\n\t}\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.t3.cy = this.cy;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).o2(this.t3);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.cy.lr(this.t3);\r\n\t\t\t}\r\n\t\t\tthis.t3.pb(this.tw);\r\n\t\t\tthis.t3.index = this.index;\r\n\t\t\tthis.n2(this.t3);\r\n\t\t\tthis.jl = this.t3.jl;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.t9));\r\n\t\t\t}\r\n\t\t\tif (this.cy != null) {\r\n\t\t\t\tlet f = this.cy;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.t9));\r\n\t\t\t}\r\n\t\t\tthis.t7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.t3.cr = this.cr;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.t7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.t3.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.t4.b6();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.t4.cd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.t4.cg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.t4.ca();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.t3;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.t3.fk = this.fk;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.t3.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.t4.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.t4.b4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.t4.cc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.t4.b1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.t4.b2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.ik)) {\r\n\t\t\t\tthis.t4.b9();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.hp)) {\r\n\t\t\t\tthis.t4.b3();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.t4.cb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.t4.ce();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.t3.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.t4.b7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.t4.b8();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.t3.legend = this.legend;\r\n\t\t\tthis.cj.av();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate t7(): void {\r\n\t\tif (this.cy == null || this.t3 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.t5)) {\r\n\t\t\tif (this.cy.tn.width > this.t5) {\r\n\t\t\t\tlet hs_ = this.t3;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.t3;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate t9(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.t7();\r\n\t}\r\n\tpp(a: boolean): void {\r\n\t\tsuper.pp(a);\r\n\t\tif (this.t3 != null) {\r\n\t\t\tthis.t3.pp(a);\r\n\t\t}\r\n\t}\r\n\tpo(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.t3 != null) {\r\n\t\t\tthis.t3.po(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\tau(a: Point, b: boolean): DataContext {\r\n\t\treturn this.t3.au(a, b);\r\n\t}\r\n\tp8(): void {\r\n\t\tsuper.p8();\r\n\t\tthis.t3.p8();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.t3.coercionMethods = a;\r\n\t}\r\n\tprotected n1(a: any): void {\r\n\t\tsuper.n1(a);\r\n\t\tif (this.t3 != null) {\r\n\t\t\tlet b = this.t3.jq();\r\n\t\t\tthis.nm(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.b0 = a;\r\n\t}\r\n\tprivate b0: GeographicMapSeriesHost = null;\r\n\tat(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.at(a, b);\r\n\t}\r\n\tb5(): void {\r\n\t\tthis.b0.t0 = 1;\r\n\t\tthis.b0.t3.t0 = 0;\r\n\t\tthis.b0.t3.itemsSource = this.b0.itemsSource;\r\n\t\tthis.b0.t3.index = this.b0.index;\r\n\t\tthis.b0.t3.sw = this.b0.sw;\r\n\t\tthis.b0.t3.s2 = this.b0.sw;\r\n\t\tthis.b0.t3.cc = this.b0.cc;\r\n\t\tthis.b0.t3.io = this.b0.io;\r\n\t\tthis.b0.t3.ji = this.b0.ji;\r\n\t\tthis.b0.t3._opacity = this.b0._opacity;\r\n\t\tthis.b0.t3.iu = this.b0.iu;\r\n\t\tthis.b0.t3.hp = this.b0.hp;\r\n\t\tthis.b0.t3.ik = this.b0.ik;\r\n\t\tthis.b0.t3.fy = this.b0.fy;\r\n\t\tthis.b0.t3.legendItemBadgeShape = this.b0.legendItemBadgeShape;\r\n\t\tthis.b0.t3.ba = this.b0.ba;\r\n\t}\r\n\tb6(): void {\r\n\t\tthis.b0.t3.itemsSource = this.b0.itemsSource;\r\n\t}\r\n\tcd(): void {\r\n\t\tthis.b0.t3.io = this.b0.io;\r\n\t}\r\n\tcg(): void {\r\n\t\tthis.b0.t3.ji = this.b0.ji;\r\n\t}\r\n\tca(): void {\r\n\t\tthis.b0.t3._opacity = this.b0._opacity;\r\n\t}\r\n\tcf(): void {\r\n\t\tthis.b0.t3.iu = this.b0.iu;\r\n\t}\r\n\tb4(): void {\r\n\t\tthis.b0.t3.sw = this.b0.sw;\r\n\t}\r\n\tcc(): void {\r\n\t\tthis.b0.t3.s2 = this.b0.s2;\r\n\t}\r\n\tb1(): void {\r\n\t\tthis.b0.t3.sw = this.b0.ss;\r\n\t}\r\n\tb2(): void {\r\n\t\tthis.b0.t3.s2 = this.b0.sv;\r\n\t}\r\n\tb7(): void {\r\n\t\tthis.b0.t3.ba = this.b0.ba;\r\n\t}\r\n\tb8(): void {\r\n\t\tthis.b0.t3.legendItemBadgeShape = this.b0.legendItemBadgeShape;\r\n\t}\r\n\tb3(): void {\r\n\t\tthis.b0.t3.hp = this.b0.hp;\r\n\t}\r\n\tb9(): void {\r\n\t\tthis.b0.t3.ik = this.b0.ik;\r\n\t}\r\n\tcb(): void {\r\n\t\tthis.b0.t3.cc = this.b0.cc;\r\n\t}\r\n\tce(): void {\r\n\t\tthis.b0.t3.fy = this.b0.fy;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.t3;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.ur));\r\n\t}\r\n\tqv(): DataTemplate {\r\n\t\treturn this.us;\r\n\t}\r\n\tsz(): Brush {\r\n\t\treturn this.u5;\r\n\t}\r\n\ts0(): Brush {\r\n\t\treturn this.u6;\r\n\t}\r\n\ths(): number {\r\n\t\treturn this.ue;\r\n\t}\r\n\tkx(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.t3);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.kx();\r\n\t}\r\n\tprivate ur(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.t3);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.us = c.uu;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.u6 = c.vb;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.u5 = c.va;\r\n\t\t}\r\n\t}\r\n\tud: MarkerType;\r\n\tue: number;\r\n\tuc: MarkerOutlineMode;\r\n\tub: MarkerFillMode;\r\n\tut: DataTemplate;\r\n\tu7: Brush;\r\n\tu8: Brush;\r\n\tuf: number;\r\n\tus: DataTemplate;\r\n\tu5: Brush;\r\n\tu6: Brush;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.t3).vc = this.u7;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.t3).vd = this.u8;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.t3).t7 = this.uc;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.t3).t3 = this.ub;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.t3).ua = this.ud;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.t3).uw = this.ut;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.t3).uf = this.ue;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.t3).w1 = this.uf;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:u5:uu', [ (<any>Brush).$ ], 'ActualMarkerOutline:u6:uv', [ (<any>Brush).$ ], 'ActualMarkerTemplate:us:uw', [ (<any>DataTemplate).$, null ], 'MarkerBrush:u7:ux', [ (<any>Brush).$ ], 'MarkerFillMode:ub:uy', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:uc:uz', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:u8:u0', [ (<any>Brush).$ ], 'MarkerTemplate:ut:u1', [ (<any>DataTemplate).$, null ], 'MarkerThickness:ue:u2', [ 1, DeviceUtils.g(2) ], 'MarkerType:ud:u3', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:uf:u4', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\tue: GeographicShapeSeriesBaseView;\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.ue = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tuw: string;\r\n\tprotected get_es(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_du(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tul: boolean;\r\n\tuk: boolean;\r\n\tprotected uj: boolean = false;\r\n\tprotected ui: boolean = false;\r\n\tud: ShapeItemSearchMode;\r\n\tuo: number;\r\n\tun: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.ue.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.ue.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\tthis.ue.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.t3).u2 = this.ul;\r\n\t\t\tthis.uj = this.ul;\r\n\t\t\tif (this.ul) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.t3);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.uz));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.t3);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.uz));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.t3).u1 = this.uk;\r\n\t\t\tthis.ui = this.uk;\r\n\t\t\tif (this.ul) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.t3);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.uy));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.t3);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.uy));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.t3).uo = this.ud;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.t3).vj = this.un;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.t3).vk = this.uo;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.uh) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.u0));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.u1();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.uh = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.u0));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate uz(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate uy(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate u0(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.u1();\r\n\t}\r\n\tprivate u1(): void {\r\n\t\tlet sds_ = this.ug;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate uf: ShapefileConverter = null;\r\n\tprivate uh: boolean = false;\r\n\tget ug(): ShapefileConverter {\r\n\t\treturn this.uf;\r\n\t}\r\n\tset ug(a: ShapefileConverter) {\r\n\t\tlet b = this.uf;\r\n\t\tthis.uf = a;\r\n\t\tif (b != this.uf) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.uf);\r\n\t\t}\r\n\t}\r\n\tum: number;\r\n\tprotected get_gf(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_gf(a: boolean): void {\r\n\t\tsuper.set_gf(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'IsCustomShapeMarkerStyleAllowed:uk:u2', [ 0, false ], 'IsCustomShapeStyleAllowed:ul:u3', [ 0, false ], 'ItemSearchMode:ud:u4', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:un:u5', [ 1, 10000 ], 'ItemSearchThreshold:uo:u6', [ 1, 10000 ], 'ShapeFilterResolution:um:u7', [ 1, 2 ], 'ShapeMemberPath:uw:u8', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicShapeSeriesBase = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ShapeSeriesBase>this.ch.t3).vw = this.ch.uw;\r\n\t}\r\n\tci(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.ch.t3;\r\n\t\tif (this.ch.cy == null) {\r\n\t\t\ta.ui = null;\r\n\t\t\ta.uk = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.ui = (<XamGeographicMap>this.ch.cy).ua;\r\n\t\ta.uk = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ShapeSeriesBase>this.ch.t3).vw = this.ch.uw;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ShapeSeriesBase>this.ch.t3).vg = this.ch.um;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected get_fg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.ws = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_u4(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected ws: TileSeriesView;\r\n\tget ww(): GeographicMapImagery {\r\n\t\treturn this.wu;\r\n\t}\r\n\tset ww(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.ww;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ww;\r\n\t\t\tthis.wu = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate wu: GeographicMapImagery = null;\r\n\tprivate wt: GeographicMapImagery = null;\r\n\tprotected get wv(): GeographicMapImagery {\r\n\t\treturn this.wt;\r\n\t}\r\n\tprotected set wv(a: GeographicMapImagery) {\r\n\t\tlet b = this.wt;\r\n\t\tthis.wt = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.wt);\r\n\t}\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.w1));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.w1));\r\n\t\t\t}\r\n\t\t\tthis.ws.dh(e, f);\r\n\t\t\tthis.pp(false);\r\n\t\t\tthis.ol();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.w2));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.w2));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.ws.dg(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.cy) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.cy;\r\n\t\t\t\tthis.w4(this.cj);\r\n\t\t\t\tthis.ws.dd(this.cy.tn);\r\n\t\t\t}\r\n\t\t\tthis.ol();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.ws.dd(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.ws.dk(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.wv != null) {\r\n\t\t\t\tthis.wv.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.wv != null) {\r\n\t\t\t\tthis.wv.be(this.cj.w);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.on();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate w1(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.w4(this.cj);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate w2(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.wy) {\r\n\t\t\tthis.ws.di();\r\n\t\t}\r\n\t}\r\n\tprivate wx: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.wx = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.wx = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.pp(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.i4 != null) {\r\n\t\t\tthis.i4.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected qm(a: Rect, b: Rect): void {\r\n\t\tthis.ws.dj();\r\n\t\tsuper.qm(a, b);\r\n\t}\r\n\tprivate wy: boolean = false;\r\n\tpq(a: boolean): void {\r\n\t\tsuper.pq(a);\r\n\t\tthis.w3(a, this.cj);\r\n\t}\r\n\tprotected w3(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.w4(b);\r\n\t\tif (this.wx != null) {\r\n\t\t\tthis.wy = true;\r\n\t\t\tthis.wx(a);\r\n\t\t\tthis.wy = false;\r\n\t\t}\r\n\t\te.di();\r\n\t}\r\n\tpo(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.po(a, b, c, d, e);\r\n\t\tlet f = this.gu.item(d);\r\n\t\tf.a3(c);\r\n\t\tif (this.dl(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.wb(f);\r\n\t}\r\n\tprivate w4(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.ww != null && this.ww.ao != null) {\r\n\t\t\tif (this.ww != this.wv) {\r\n\t\t\t\tthis.wv = this.ww;\r\n\t\t\t}\r\n\t\t\tif (this.wv != null && !b.isEmpty) {\r\n\t\t\t\tif (this.wv.width != b.width) {\r\n\t\t\t\t\tthis.wv.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.wv.height != b.height) {\r\n\t\t\t\t\tthis.wv.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tnj(a: boolean, b: SeriesView): void {\r\n\t\tsuper.nj(a, b);\r\n\t\t(<TileSeriesView>b).de();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.da = a;\r\n\t}\r\n\tprotected da: TileSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.da.s2 = Defaults.ao;\r\n\t\t\tthis.da.sw = Defaults.an;\r\n\t\t}\r\n\t}\r\n\tprotected ck(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.dl.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected c5(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.c6(a, b, true);\r\n\t}\r\n\tprotected c4(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected co(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcm(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate dl: GeometryGroup = new GeometryGroup();\r\n\tcu(): void {\r\n\t\tsuper.cu();\r\n\t\tthis.dl.d.clear();\r\n\t}\r\n\tct(): void {\r\n\t\tsuper.ct();\r\n\t\tthis.as();\r\n\t}\r\n\tdd(a: Rect): void {\r\n\t\tif (this.da.ww != null) {\r\n\t\t\tthis.da.ww.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate dc: DomWrapper = null;\r\n\tprivate db: RenderingContext = null;\r\n\tdg(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.dc == null) {\r\n\t\t\tthis.dc = this.e.i4.createElement(\"canvas\");\r\n\t\t\tlet c = this.e.i4.get2DCanvasContext(this.dc);\r\n\t\t\tthis.db = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.dc.setAttribute(\"width\", this.bx.width.toString());\r\n\t\t\tthis.dc.setAttribute(\"height\", this.bx.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.df));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tb.be(this.w);\r\n\t\t\t}\r\n\t\t\tb.bd(this.db);\r\n\t\t\tb.bf(this.bx);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.df));\r\n\t\t}\r\n\t}\r\n\tprivate df(a: any, b: EventArgs): void {\r\n\t\tthis.as();\r\n\t}\r\n\tdh(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdj(): void {\r\n\t\tif (this.dc != null) {\r\n\t\t\tthis.dc.setAttribute(\"width\", this.bx.width.toString());\r\n\t\t\tthis.dc.setAttribute(\"height\", this.bx.height.toString());\r\n\t\t}\r\n\t\tif (this.da.ww != null) {\r\n\t\t\tthis.da.ww.bf(this.bx);\r\n\t\t}\r\n\t}\r\n\tprotected a8(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.a8(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.dc == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.dl.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.k.aa();\r\n\t\t\tthis.k.r(this.dl);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.k.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.bx.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.bx.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.bx.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.bx.height));\r\n\t\tthis.k.o(this.dc.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.k.z();\r\n\t\t}\r\n\t}\r\n\tdi(): void {\r\n\t\tthis.as();\r\n\t}\r\n\tde(): void {\r\n\t}\r\n\tdk(a: Rect): void {\r\n\t\tif (this.da.ww != null) {\r\n\t\t\tthis.da.ww.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.l5);\r\n\t\te = this.ak(a.l4);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.l5;\r\n\t\te = a.l4;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.uv = SphericalMercatorVerticalScaler.am(XamGeographicMap.v7.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.v7.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.cf = true;\r\n\t\tthis.ua = a;\r\n\t\tthis.ua.nl = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.cf = true;\r\n\t\tthis.uc = b;\r\n\t\tthis.uc.nl = new SphericalMercatorVerticalScaler();\r\n\t\tthis.vh();\r\n\t\tthis.vo();\r\n\t\tthis.md();\r\n\t}\r\n\tprivate uz: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.ua.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.uc.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\tmd(): void {\r\n\t\tsuper.md();\r\n\t\tthis.um.fv(this.gh);\r\n\t}\r\n\teu(): boolean {\r\n\t\treturn this.us;\r\n\t}\r\n\tev(): boolean {\r\n\t\treturn this.us;\r\n\t}\r\n\tus: boolean;\r\n\tstatic uk: MapResizeBehavior = 0;\r\n\tul: MapResizeBehavior;\r\n\tuo: boolean = false;\r\n\tup: boolean;\r\n\tprotected uj(): MapBackgroundTilingMode {\r\n\t\tif (this.uh == 0) {\r\n\t\t\tif (this.uo) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate ug: MapBackgroundTilingMode = 1;\r\n\tget ui(): MapBackgroundTilingMode {\r\n\t\treturn this.ug;\r\n\t}\r\n\tset ui(a: MapBackgroundTilingMode) {\r\n\t\tthis.ug = a;\r\n\t}\r\n\tuh: MapBackgroundTilingMode;\r\n\tstatic v7: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\tuv: number = 0;\r\n\tur: boolean;\r\n\tuq: boolean;\r\n\twn: Rect;\r\n\tprivate v6: Rect = null;\r\n\tget wb(): Rect {\r\n\t\treturn this.v6;\r\n\t}\r\n\tset wb(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.v6, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.v6;\r\n\t\t\tthis.v6 = a;\r\n\t\t\tthis.ol(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\twf(): Rect {\r\n\t\treturn this.wb;\r\n\t}\r\n\tprivate vh(): void {\r\n\t\tif (this.wn.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.wb = this.wl(this.wn, this.ce == 1);\r\n\t}\r\n\tprivate wl(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.v7.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.v7.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.uv) {\r\n\t\t\tlet m = i / this.uv;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.v7.width;\r\n\t\t\te = m * XamGeographicMap.v7.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.v7.left) {\r\n\t\t\t\t\td += (XamGeographicMap.v7.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.v7.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.v7.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.uv) {\r\n\t\t\tlet o = this.uv * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.uv)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.uv));\r\n\t\t\t\t\tr -= ((r) - (k + this.uv));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.ud;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.ud = a;\r\n\t\t\tthis.ol(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate ud: GeographicMapImagery = null;\r\n\tget ua(): NumericXAxis {\r\n\t\treturn this.t9;\r\n\t}\r\n\tset ua(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.ua;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ua;\r\n\t\t\tthis.t9 = a;\r\n\t\t\tthis.ol(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate t9: NumericXAxis = null;\r\n\tget uc(): NumericYAxis {\r\n\t\treturn this.ub;\r\n\t}\r\n\tset uc(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.uc;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.uc;\r\n\t\t\tthis.ub = a;\r\n\t\t\tthis.ol(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate ub: NumericYAxis = null;\r\n\tuf: GeographicMapImagery = null;\r\n\tprivate static wa: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\tvr(a: Rect): void {\r\n\t\tthis.t3 = a;\r\n\t}\r\n\tvq(a: Rect): void {\r\n\t\tthis.wn = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.wd(a, true, 0);\r\n\t}\r\n\twc(a: Rect, b: number): Rect {\r\n\t\treturn this.wd(a, false, b);\r\n\t}\r\n\tprivate wd(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.wl(a, false);\r\n\t\t}\r\n\t\tlet e = this.ua;\r\n\t\tlet f = this.uc;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.wa, this.t2, e.ch);\r\n\t\tg.c = this.tr;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.wa, this.t2, f.ch);\r\n\t\th.c = this.tr;\r\n\t\tlet i = this.ua.ej(d.left, g);\r\n\t\tlet j = this.ua.ej(d.right, g);\r\n\t\tlet k = this.uc.ej(d.top, h);\r\n\t\tlet l = this.uc.ej(d.bottom, h);\r\n\t\tlet m = (i - c) / this.t2.width;\r\n\t\tlet n = (l - c) / this.t2.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.t2.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.t2.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.wa);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.wa;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.wa;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\twh(a: Rect): Rect {\r\n\t\tlet b = this.ua;\r\n\t\tlet c = this.uc;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.t2, b.ch);\r\n\t\td.c = this.tr;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.t2, c.ch);\r\n\t\te.c = this.tr;\r\n\t\tlet f = this.tq;\r\n\t\tlet g = b.em(f.left, d);\r\n\t\tlet h = c.em(f.top, e);\r\n\t\tlet i = b.em(f.right, d);\r\n\t\tlet j = c.em(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.ce == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.v7);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.v7;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tv3(a: Point): Point {\r\n\t\tlet b = this.ua.l8(a.x);\r\n\t\tlet c = this.uc.l8(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tv4(a: Point): Point {\r\n\t\tlet b = this.ua.e4(a.x);\r\n\t\tlet c = this.uc.e4(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tv5(a: Point): Point {\r\n\t\treturn this.v4(a);\r\n\t}\r\n\tve(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tvk(a: Brush): void {\r\n\t}\r\n\tfj(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tvm(): void {\r\n\t\tthis.um.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.p8();\r\n\t\t}\r\n\t}\r\n\tprotected v2: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected vp(): void {\r\n\t\tif (this.ul == 2) {\r\n\t\t\tif (!this.t2.isEmpty && this.t2.width > 0 && this.t2.height > 0) {\r\n\t\t\t\tlet a: number = this.ua.l8(this.t2.left + (this.t2.width / 2));\r\n\t\t\t\tlet b: number = this.uc.l8(this.t2.top + (this.t2.height / 2));\r\n\t\t\t\tthis.v2 = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.t2.isEmpty && this.t2.width > 0 && this.t2.height > 0) {\r\n\t\t\t\tlet c: number = this.ua.l8(this.t2.left);\r\n\t\t\t\tlet d: number = this.uc.l8(this.t2.top);\r\n\t\t\t\tthis.v2 = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected vl(): void {\r\n\t\tif (isNaN_(this.v2.x) || isNaN_(this.v2.y)) {\r\n\t\t\tthis.vp();\r\n\t\t}\r\n\t\tlet a: number = this.v2.x;\r\n\t\tlet b: number = this.v2.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.tn.left;\r\n\t\t\tlet d: number = this.tn.top;\r\n\t\t\tlet e: number = this.tn.width;\r\n\t\t\tlet f: number = this.tn.height;\r\n\t\t\tif (e > this.v9.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.wa, this.t2, this.ua.ch);\r\n\t\t\t\tg.c = this.tr;\r\n\t\t\t\tlet h: number = this.ua.ej(a, g);\r\n\t\t\t\tif (this.ul == 2) {\r\n\t\t\t\t\tlet i = h / this.t2.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.t2.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.v9.right) {\r\n\t\t\t\t\tc = this.v9.right - e;\r\n\t\t\t\t} else if (c < this.v9.left) {\r\n\t\t\t\t\tc = this.v9.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.v9.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.wa, this.t2, this.uc.ch);\r\n\t\t\t\tj.c = this.tr;\r\n\t\t\t\tlet k: number = this.uc.ej(b, j);\r\n\t\t\t\tif (this.ul == 2) {\r\n\t\t\t\t\tlet l = k / this.t2.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.t2.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.v9.bottom) {\r\n\t\t\t\t\td = this.v9.bottom - f;\r\n\t\t\t\t} else if (d < this.v9.top) {\r\n\t\t\t\t\td = this.v9.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.pu(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_em(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected v9: Rect = null;\r\n\tprotected to(): Rect {\r\n\t\tlet a: Rect = super.to();\r\n\t\tif (this.ua == null || this.uc == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.ty();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.ce == 1) {\r\n\t\t\tif (this.t3.width > this.v9.width) {\r\n\t\t\t\tb = 0.5 - (this.t3.width / 2);\r\n\t\t\t} else if (b + a.width > this.v9.right) {\r\n\t\t\t\tb = this.v9.right - this.t3.width;\r\n\t\t\t} else if (b < this.v9.left) {\r\n\t\t\t\tb = this.v9.left;\r\n\t\t\t}\r\n\t\t\tif (this.t3.height > this.v9.height) {\r\n\t\t\t\tc = 0.5 - (this.t3.height / 2);\r\n\t\t\t} else if (c + this.t3.height > this.v9.bottom) {\r\n\t\t\t\tc = this.v9.bottom - this.t3.height;\r\n\t\t\t} else if (c < this.v9.top) {\r\n\t\t\t\tc = this.v9.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.ur && this.ce == 2 && this.uo) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.v9.right) > 0 && ((a.right - this.v9.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.v9.left - (a.width - (a.right - this.v9.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.v9.left && (Math.abs(a.left - this.v9.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.v9.right - (Math.abs(a.left - this.v9.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.ur) {\r\n\t\t\tlet f = this.wc(this.wn, 1);\r\n\t\t\tf = this.we(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.d9 = true;\r\n\t\t\tthis.t3 = e;\r\n\t\t\tthis.d9 = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tlo(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.ty();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.t9.ej(-180, b);\r\n\t\t\t\tlet j = this.t9.ej(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.t9.ej(-180, b);\r\n\t\t\t\tlet l = this.t9.ej(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\tty(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.wa, this.t2, this.ua.ch);\r\n\t\ta.c = this.tr;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.wa, this.t2, this.uc.ch);\r\n\t\tb.c = this.tr;\r\n\t\tlet c: number = this.ua.ej(XamGeographicMap.v7.left, a);\r\n\t\tlet d: number = this.ua.ej(XamGeographicMap.v7.right, a);\r\n\t\tlet e: number = this.uc.ej(XamGeographicMap.v7.top, b);\r\n\t\tlet f: number = this.uc.ej(XamGeographicMap.v7.bottom, b);\r\n\t\tthis.v9 = new Rect(0, c / this.t2.width, f / this.t2.height, (d - c) / this.t2.width, (e - f) / this.t2.height);\r\n\t\treturn this.v9;\r\n\t}\r\n\tprivate we(a: Rect): Rect {\r\n\t\tlet b: number = this.gl;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.t2;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected tp(a: Rect): Rect {\r\n\t\tsuper.tp(this.t2);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\twg(a: Rect): Rect {\r\n\t\treturn this.tp(a);\r\n\t}\r\n\tprotected cu(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate vg(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = this;\r\n\t\t}\r\n\t}\r\n\tprotected n4(a: SeriesViewerView): void {\r\n\t\tsuper.n4(a);\r\n\t\tthis.um = <XamGeographicMapView>a;\r\n\t}\r\n\tof(a: Rect, b: Rect): void {\r\n\t\tsuper.of(a, b);\r\n\t\tthis.ph(this.ua);\r\n\t\tthis.ph(this.uc);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.vl();\r\n\t\t}\r\n\t\tif (this.ur) {\r\n\t\t\tthis.tn = this.to();\r\n\t\t}\r\n\t\tthis.vs();\r\n\t}\r\n\tux: number;\r\n\tprivate uu: number = 1;\r\n\tget uw(): number {\r\n\t\treturn this.uu;\r\n\t}\r\n\tset uw(a: number) {\r\n\t\tlet b = this.uu;\r\n\t\tthis.uu = a;\r\n\t\tthis.ol(\"ActualWindowScale\", b, this.uu);\r\n\t}\r\n\tgr(): number {\r\n\t\treturn this.uw;\r\n\t}\r\n\tgs(): number {\r\n\t\treturn this.uw;\r\n\t}\r\n\tprotected pg(): void {\r\n\t\tsuper.pg();\r\n\t\tlet a = Math.min(this.tn.width, this.tn.height);\r\n\t\tthis.uw = a;\r\n\t}\r\n\tfb(): boolean {\r\n\t\treturn this.uo;\r\n\t}\r\n\tcf(): ZoomCoercionMode {\r\n\t\tif (this.cg == 0) {\r\n\t\t\tif (this.up) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cg;\r\n\t}\r\n\tprotected og(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.og(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.vh();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.vp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.ui = this.uj();\r\n\t\t\tif (this.uf != null) {\r\n\t\t\t\tthis.uf.isHorizontalWrappingEnabled = this.ui == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.uo = this.up;\r\n\t\t\tthis.ui = this.uj();\r\n\t\t\tthis.ce = this.cf();\r\n\t\t\tif (this.uf != null) {\r\n\t\t\t\tthis.uf.isHorizontalWrappingEnabled = this.ui == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.tn = this.to();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.uf != null) {\r\n\t\t\t\tlet e = this.uf;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.vi));\r\n\t\t\t\tthis.uf.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.uf = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.uf != null) {\r\n\t\t\t\tlet f = this.uf;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.vi));\r\n\t\t\t\tthis.uf.deferralHandler = this;\r\n\t\t\t\tthis.uf.isHorizontalWrappingEnabled = this.ui == 2;\r\n\t\t\t}\r\n\t\t\tthis.um.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.uf != null) {\r\n\t\t\t\tthis.uf.geographicMap = this;\r\n\t\t\t\tthis.um.fr(this.tn);\r\n\t\t\t\tthis.um.fv(this.gh);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.vn(<Axis>c);\r\n\t\t\tthis.vg(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.uq) {\r\n\t\t\t\tthis.t3 = XamGeographicMap.wa;\r\n\t\t\t}\r\n\t\t\tthis.vh();\r\n\t\t\tthis.vo();\r\n\t\t\tthis.vp();\r\n\t\t\tthis.tn = this.to();\r\n\t\t\tthis.um.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.um.fr(this.tn);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.pp(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.uw = this.ux;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.fi) {\r\n\t\t\t\tthis.ps(this.gr(), this.gs());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.um.fv(this.gh);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.gl = 5E-06;\r\n\t\t\t\tthis.gk = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gl = h;\r\n\t\t\t\tthis.gk = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.po();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.og();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate vi(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate vn(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = null;\r\n\t\t}\r\n\t}\r\n\tprivate vo(): void {\r\n\t\tif (this.ua != null) {\r\n\t\t\tthis.ua.l5 = this.wb.left;\r\n\t\t\tthis.ua.l4 = this.wb.right;\r\n\t\t}\r\n\t\tif (this.uc != null) {\r\n\t\t\tthis.uc.l5 = this.wb.top;\r\n\t\t\tthis.uc.l4 = this.wb.bottom;\r\n\t\t}\r\n\t\tthis.ua.c2(true);\r\n\t\tthis.uc.c2(true);\r\n\t}\r\n\tum: XamGeographicMapView;\r\n\tprivate un: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.un = this.um.fo;\r\n\t\treturn this.un;\r\n\t}\r\n\tss(): Brush {\r\n\t\treturn this.um.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.um.fx;\r\n\t}\r\n\tprotected o9(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.uc = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.o9(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.oz(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.pf(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.l1();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.uz != null) {\r\n\t\t\tthis.uz.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tvf(a: boolean): void {\r\n\t\tthis.pn(a);\r\n\t}\r\n\tu0(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.ua.fw();\r\n\t\tlet c = this.uc.fw();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].jq();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.t2);\r\n\t\ta.centralArea = RectData.b(this.t2);\r\n\t\ta.plotArea = RectData.b(this.t2);\r\n\t\treturn a;\r\n\t}\r\n\ttu(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\tvj(): void {\r\n\t}\r\n\tprivate v8: Rect = Rect.empty;\r\n\tprotected get wm(): Rect {\r\n\t\treturn this.v8;\r\n\t}\r\n\tprotected set wm(a: Rect) {\r\n\t\tthis.v8 = a;\r\n\t}\r\n\tvt(a: Rect): void {\r\n\t\tthis.wm = a;\r\n\t\tthis.vs();\r\n\t}\r\n\tprivate vs(): void {\r\n\t\tif (this.ut && !this.wm.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.wm);\r\n\t\t\tthis.wm = Rect.empty;\r\n\t\t\tthis.pu(a, false);\r\n\t\t}\r\n\t}\r\n\tget ut(): boolean {\r\n\t\treturn !this.t2.isEmpty && !this.tr.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'ol', [ 'BackgroundTilingMode:uh:vu', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:up:vv', [ 0, false ], 'ResizeBehavior:ul:vw', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.uk) ], 'SuppressZoomResetOnWorldRectChange:uq:vx', [ 0, false ], 'UseWorldRectForZoomBounds:ur:vy', [ 0, false ], 'WindowScale:ux:vz', [ 1, NaN ], 'WorldRect:wn:v0', [ (<any>Rect).$, XamGeographicMap.v7 ], 'Zoomable:us:v1', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.wg(b);\r\n\t\tlet d: Rect = XamGeographicMap.v7;\r\n\t\tlet e: Rect = this.geographicMap.wb;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.ua;\r\n\t\tlet i: NumericYAxis = this.geographicMap.uc;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.ch);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.ch);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.ej(d.left, j);\r\n\t\tlet m: number = i.ej(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprotected ch: GeographicXYTriangulatingSeries = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a = <ScatterTriangulationSeries>this.ch.t3;\r\n\t\ta.u3 = this.ch.uf;\r\n\t\ta.vb = this.ch.ud;\r\n\t\ta.trianglesSource = this.ch.uc;\r\n\t\ta.ur = this.ch.ui;\r\n\t\ta.ut = this.ch.uk;\r\n\t\ta.uv = this.ch.um;\r\n\t}\r\n\tck(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.ch.t3;\r\n\t\tif (this.ch.cy == null) {\r\n\t\t\ta.t1 = null;\r\n\t\t\ta.t2 = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.t1 = (<XamGeographicMap>this.ch.cy).ua;\r\n\t\ta.t2 = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.t3).u3 = this.ch.uf;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.t3).vb = this.ch.ud;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.t3).trianglesSource = this.ch.uc;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.t3).ur = this.ch.ui;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.t3).ut = this.ch.uk;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterTriangulationSeries>this.ch.t3).uv = this.ch.um;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cp = a;\r\n\t}\r\n\tprivate cp: GeographicScatterAreaSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tif (this.cp.ux != null) {\r\n\t\t\tthis.cp.ux.wa = this.cp.u1;\r\n\t\t\tthis.cp.ux.vy = this.cp.uw;\r\n\t\t}\r\n\t}\r\n\tcq(): void {\r\n\t\tif (this.cp.ux != null) {\r\n\t\t\tthis.cp.ux.wa = this.cp.u1;\r\n\t\t}\r\n\t}\r\n\tcr(): void {\r\n\t\tif (this.cp.ux != null) {\r\n\t\t\tthis.cp.ux.vy = this.cp.uw;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.sn = 2;\r\n\t\tthis.fn.hq = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bw(a);\r\n\t\tthis.fn.vf(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a8(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.uf != null) {\r\n\t\t\tthis.fn.uf.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.uf != null) {\r\n\t\t\tthis.fn.uf.windowRect = this.fn.tn;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.h.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.h.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.gh;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ad = Defaults.j;\r\n\t\tthis.fe.ad = Defaults.j;\r\n\t\tthis.fd._stroke = Defaults.ae;\r\n\t\tthis.fe._stroke = Defaults.ae;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.ub = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\tub: GeographicXYTriangulatingSeriesView;\r\n\tuf: string;\r\n\tud: string;\r\n\tuc: IEnumerable;\r\n\tui: string;\r\n\tuk: string;\r\n\tum: string;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.ub.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.ub.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.ub.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.ub.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.ub.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.ub.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.ub.co();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:ud:uo', [ 2, \"pointY\" ], 'LongitudeMemberPath:uf:up', [ 2, \"pointX\" ], 'TrianglesSource:uc:uq', [ IEnumerable_$type, null ], 'TriangleVertexMemberPath1:ui:ur', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:uk:us', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:um:ut', [ 2, \"v3\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_d8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\tu1: string;\r\n\tprivate uu: ColorScale = null;\r\n\tget uw(): ColorScale {\r\n\t\treturn this.uu;\r\n\t}\r\n\tset uw(a: ColorScale) {\r\n\t\tlet b: boolean = this.uu != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.uu;\r\n\t\t\tif (this.uu != null) {\r\n\t\t\t\tlet d = this.uu;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.u4));\r\n\t\t\t}\r\n\t\t\tthis.uu = a;\r\n\t\t\tif (this.uu != null) {\r\n\t\t\t\tlet e = this.uu;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.u4));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.uu);\r\n\t\t\tif (this.ux != null) {\r\n\t\t\t\tthis.ux.vy = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate u4(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.uz.cr();\r\n\t\tthis.u6();\r\n\t\tthis.pp(false);\r\n\t}\r\n\tu6(): void {\r\n\t\tif (this.ux != null) {\r\n\t\t\tthis.uv = this.ux.vx;\r\n\t\t}\r\n\t}\r\n\tuv: ColorScale;\r\n\tprotected qd(): void {\r\n\t\tsuper.qd();\r\n\t\tthis.u6();\r\n\t}\r\n\tux: ScatterAreaSeries;\r\n\tprotected t2(): Series {\r\n\t\tthis.ux = new ScatterAreaSeries();\r\n\t\tlet a = this.ux;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.u5));\r\n\t\treturn this.ux;\r\n\t}\r\n\tprivate u5(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.uz = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tuz: GeographicScatterAreaSeriesView;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.uz.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.uz.cr();\r\n\t\t\tthis.u6();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_gf(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_gf(a: boolean): void {\r\n\t\tsuper.set_gf(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:uv:u7', [ (<any>ColorScale).$, null ], 'ColorMemberPath:u1:u8', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cp = a;\r\n\t}\r\n\tprivate cp: GeographicContourLineSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cp.iu = Defaults.m;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tif (this.cp.t3 != null) {\r\n\t\t\tthis.cp.uv.vy = this.cp.uy;\r\n\t\t\tthis.cp.uv.v8 = this.cp.u2;\r\n\t\t}\r\n\t}\r\n\tcq(): void {\r\n\t\tif (this.cp.uv != null) {\r\n\t\t\tthis.cp.uv.vy = this.cp.uy;\r\n\t\t}\r\n\t}\r\n\tcr(): void {\r\n\t\tif (this.cp.uv != null) {\r\n\t\t\tthis.cp.uv.v8 = this.cp.u2;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected get_ew(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected t8(): void {\r\n\t\tsuper.t8();\r\n\t}\r\n\tuv: ScatterContourSeries;\r\n\tprotected t2(): Series {\r\n\t\tthis.uv = new ScatterContourSeries();\r\n\t\tlet a = this.uv;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.u5));\r\n\t\tlet b = this.uv;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.u6));\r\n\t\treturn this.uv;\r\n\t}\r\n\tprivate u5(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate u6(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.t3);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.ux = c.vx;\r\n\t\t}\r\n\t}\r\n\tu2: string;\r\n\tuy: ValueBrushScale;\r\n\tux: ValueBrushScale;\r\n\tprotected qd(): void {\r\n\t\tsuper.qd();\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.uz = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tuz: GeographicContourLineSeriesView;\r\n\tuu: ContourValueResolver;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.uz.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.uz.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.uv.vv = this.uu;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.uv.s7 = this.s7;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.uv.s8 = this.s8;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.uv.il = this.il;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LineJoin\":\r\n\t\t\tthis.uv.ta = this.ta;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:ux:u7', [ (<any>ValueBrushScale).$, null ], 'FillScale:uy:u8', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:u2:u9', [ 2, \"value\" ], 'ValueResolver:uu:va', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.ew as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.u2 as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.u2 = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.uy;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.uy = null : this.i.uy = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.ux;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ux = null : this.i.ux = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.uu;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.uu = null : this.i.uu = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicHighDensityScatterSeries = null;\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ch.t3);\r\n\t\ta.wb = this.ch.us;\r\n\t\ta.wj = this.ch.uq;\r\n\t\ta.uo = this.ch.uf;\r\n\t\ta.un = this.ch.ue;\r\n\t\ta.fk = this.ch.ud;\r\n\t\ta.vj = this.ch.uh;\r\n\t\ta.vi = this.ch.ug;\r\n\t\ta.xh = this.ch.vb;\r\n\t\ta.xg = this.ch.va;\r\n\t\ta.vv = this.ch.uk;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).wb = this.ch.us;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).wj = this.ch.uq;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).uo = this.ch.uf;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).un = this.ch.ue;\r\n\t}\r\n\tco(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).fk = this.ch.ud;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).vj = this.ch.uh;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).vi = this.ch.ug;\r\n\t}\r\n\tcr(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.ch.t3);\r\n\t\tif (this.ch.cy == null) {\r\n\t\t\ta.t8 = null;\r\n\t\t\ta.ua = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.t8 = (<XamGeographicMap>this.ch.cy).ua;\r\n\t\ta.ua = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tct(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).t8 = (<XamGeographicMap>this.ch.cy).ua;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).ua = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tck(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).xh = this.ch.vb;\r\n\t}\r\n\tci(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).xg = this.ch.va;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<HighDensityScatterSeries>this.ch.t3).vv = this.ch.uk;\r\n\t}\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.ch.vb = Defaults.aq;\r\n\t\t\tthis.ch.va = Defaults.ap;\r\n\t\t\tthis.ch.sw = Defaults.al;\r\n\t\t\tthis.ch.s2 = Defaults.ak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected ip(): number {\r\n\t\tif (!isNaN_(this.io)) {\r\n\t\t\treturn super.ip();\r\n\t\t}\r\n\t\treturn Defaults.q;\r\n\t}\r\n\tprotected get_e1(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.uc = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\tuc: GeographicHighDensityScatterSeriesView;\r\n\tprotected t2(): Series {\r\n\t\tthis.ub = new HighDensityScatterSeries();\r\n\t\treturn this.ub;\r\n\t}\r\n\tprivate ub: HighDensityScatterSeries = null;\r\n\tuq: string;\r\n\tus: string;\r\n\tuf: boolean;\r\n\tue: boolean;\r\n\tud: boolean;\r\n\tuh: number;\r\n\tug: number;\r\n\tvb: Color;\r\n\tva: Color;\r\n\tuk: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate uj: number = 0;\r\n\tget ul(): number {\r\n\t\treturn this.uj;\r\n\t}\r\n\tset ul(a: number) {\r\n\t\tlet b = this.uj;\r\n\t\tthis.uj = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.uj);\r\n\t}\r\n\tprotected t8(): void {\r\n\t\tsuper.t8();\r\n\t\tlet a = (<HighDensityScatterSeries>this.t3);\r\n\t\ta.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.uz));\r\n\t\tlet b = (<HighDensityScatterSeries>this.t3);\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.uy));\r\n\t}\r\n\tprivate uz(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.ul = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate uy(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.ub == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.uc.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.uc.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.uc.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.uc.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.uc.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.uc.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.uc.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.uc.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.uc.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.uc.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.uc.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.uc.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.uc.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_gf(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_gf(a: boolean): void {\r\n\t\tsuper.set_gf(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:va:u0', [ (<any>Color).$, Defaults.ap ], 'HeatMaximum:ug:u1', [ 1, 50 ], 'HeatMinimumColor:vb:u2', [ (<any>Color).$, Defaults.aq ], 'HeatMinimum:uh:u3', [ 1, 0 ], 'LatitudeMemberPath:uq:u4', [ 2, null ], 'LongitudeMemberPath:us:u5', [ 2, null ], 'MouseOverEnabled:ud:u6', [ 0, false ], 'PointExtent:uk:u7', [ 1, 1 ], 'ProgressiveLoad:ue:u8', [ 0, true ], 'UseBruteForce:uf:u9', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.e1 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.uq as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.uq = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.us as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.us = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.uf as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.uf = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.uf);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.ue as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.ue = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.ue);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.ud as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.ud = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.ud);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.uh as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.uh = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.uh);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.ug as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.ug = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.ug);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.vb);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.vb = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.vb));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.va);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.va = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.va));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.uk as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.uk = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.uk);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.ul as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.ul = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.ul);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.us as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.us = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.us);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.ul;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.ul = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.ul));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.up as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.up = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.up);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.uh;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.uh = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.uh));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.ur as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.ur = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.ur);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.uq as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.uq = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.uq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.wn);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.wn = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.wn));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.wb);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.wb = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.wb));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.ua;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ua = null : this.i.ua = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.uc;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.uc = null : this.i.uc = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.em as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.ux as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.ux = +v;\r\n\t                                        this._a(\"windowScale\", this.i.ux);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.uw as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.uw = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.uw);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.ut as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wf();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.vr(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.vq(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wc(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wh(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v3(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v4(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.v5(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.ve();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.vm();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gr();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.gs();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.u0();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.vt(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.eq as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.t5 as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.t5 = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.t5);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.og();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.ju(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.jr(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.jf(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.jd(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.h9(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.th(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.ts(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.tu(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.h5(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.td(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.h7(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.tf(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.ti(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.ia(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.h0();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.pp(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.p8();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.ud;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.ud = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.ud));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.ue as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.ue = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.ue);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.uc;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.uc = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.uc));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.ub;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.ub = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.ub));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.ut as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.ut = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.u7);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.u7 = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.u7));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.u8);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.u8 = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.u8));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.uf as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.uf = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.uf);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.us as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.us = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.u5);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.u5 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.u5));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.u6);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.u6 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.u6));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cl = a;\r\n\t}\r\n\tprotected cl: GeographicPolylineSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.iu = Defaults.n;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ScatterPolylineSeries>this.cl.t3).wt = this.cl.u9;\r\n\t\t(<ScatterPolylineSeries>this.cl.t3).wy = this.cl.vh;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolylineSeries>this.cl.t3).wt = this.cl.u9;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolylineSeries>this.cl.t3).wy = this.cl.vh;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_e4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.va = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\tva: GeographicPolylineSeriesView;\r\n\tu9: StyleSelector;\r\n\tvh: Style;\r\n\tprotected t2(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.ve));\r\n\t\treturn a;\r\n\t}\r\n\tprivate ve(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.va.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.va.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:vh:vf', [ (<any>Style).$, null ], 'ShapeStyleSelector:u9:vg', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.e4 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.vh ? (this.i.vh.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.vh.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.vh ? (this.i.vh.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.vh.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.vh ? (this.i.vh.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.vh.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.vh.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.vh ? (this.i.vh.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.vh.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.vh.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.vh) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.vh = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicProportionalSymbolSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\tlet a = <BubbleSeries>this.ch.t3;\r\n\t\ta.xl = this.ch.v2;\r\n\t\ta.xt = this.ch.v0;\r\n\t\ta.ua = this.ch.ud;\r\n\t\ta.uw = this.ch.ut;\r\n\t\ta.uf = this.ch.ue;\r\n\t\ta.zt = this.ch.vm;\r\n\t\ta.aaj = this.ch.v7;\r\n\t\ta.zj = this.ch.ve;\r\n\t\ta.z9 = this.ch.vy;\r\n\t\ta.z4 = this.ch.vq;\r\n\t\ta.zg = this.ch.vb;\r\n\t\ta.zr = this.ch.vi;\r\n\t\ta.zs = this.ch.vl;\r\n\t\ta.zy = this.ch.vo;\r\n\t\ta.zx = this.ch.vn;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).xl = this.ch.v2;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).xt = this.ch.v0;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).ua = this.ch.ud;\r\n\t}\r\n\tct(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).uw = this.ch.ut;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).uf = this.ch.ue;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).w1 = this.ch.uf;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).xAxis = (<XamGeographicMap>this.ch.cy).ua;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).yAxis = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tcx(): void {\r\n\t\tlet a = <BubbleSeries>this.ch.t3;\r\n\t\tif (this.ch.cy == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ch.cy).ua;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).vc = this.ch.u7;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).vd = this.ch.u8;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).aaj = this.ch.v7;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zj = this.ch.ve;\r\n\t\t(<BubbleSeries>this.ch.t3).zt = this.ch.vm;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).z9 = this.ch.vy;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zg = this.ch.vb;\r\n\t\t(<BubbleSeries>this.ch.t3).zr = this.ch.vi;\r\n\t\t(<BubbleSeries>this.ch.t3).zs = this.ch.vl;\r\n\t\t(<BubbleSeries>this.ch.t3).zy = this.ch.vo;\r\n\t\t(<BubbleSeries>this.ch.t3).zx = this.ch.vn;\r\n\t}\r\n\tci(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).z4 = this.ch.vq;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zt = this.ch.vm;\r\n\t}\r\n\tck(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zr = this.ch.vi;\r\n\t}\r\n\tco(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zs = this.ch.vl;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zy = this.ch.vo;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<BubbleSeries>this.ch.t3).zx = this.ch.vn;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_dx(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.vf = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\tvf: GeographicProportionalSymbolSeriesView;\r\n\tprotected iq(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected t2(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate vc: BubbleSeries = null;\r\n\tv0: string;\r\n\tv2: string;\r\n\tv7: string;\r\n\tve: SizeScale;\r\n\tvy: string;\r\n\tvq: string;\r\n\tvb: BrushScale;\r\n\tvi: boolean;\r\n\tvl: boolean;\r\n\tvo: number;\r\n\tvn: number;\r\n\tvm: boolean;\r\n\tvk: boolean;\r\n\tvj: boolean;\r\n\tprotected vh: boolean = false;\r\n\tprotected vg: boolean = false;\r\n\tprotected get_es(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tvd: ScatterItemSearchMode;\r\n\tvp: number;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.vf.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.vf.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.vf.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.vf.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.vf.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.vf.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.vf.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.vf.c2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.vf.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.vf.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.vf.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.vf.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.vf.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.vf.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.vf.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.t3).wi = this.vk;\r\n\t\t\tthis.vh = this.vk;\r\n\t\t\tif (this.vk) {\r\n\t\t\t\tlet e = (<ScatterBase>this.t3);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.wc));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.t3);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.wc));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.t3).wh = this.vj;\r\n\t\t\tthis.vg = this.vj;\r\n\t\t\tif (this.vk) {\r\n\t\t\t\tlet g = (<ScatterBase>this.t3);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.wb));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.t3);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.wb));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.t3).v6 = this.vd;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.t3).w0 = this.vp;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate wc(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate wb(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:vq:wd', [ 2 ], 'FillScale:vb:we', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:vi:wf', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:vj:wg', [ 0, false ], 'IsCustomScatterStyleAllowed:vk:wh', [ 0, false ], 'ItemSearchMode:vd:wi', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:vp:wj', [ 1, 10000 ], 'LabelMemberPath:vy:wk', [ 2 ], 'LatitudeMemberPath:v0:wl', [ 2, null ], 'LongitudeMemberPath:v2:wm', [ 2, null ], 'MarkerBrushBrightness:vn:wn', [ 1, NaN ], 'MarkerOutlineBrightness:vo:wo', [ 1, NaN ], 'MarkerOutlineUsesFillScale:vl:wp', [ 0, false ], 'RadiusMemberPath:v7:wq', [ 2, null ], 'RadiusScale:ve:wr', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:vm:ws', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.dx as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.v0 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.v0 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.v2 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.v2 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.v7 as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.v7 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.ve;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.ve = null : this.i.ve = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.vy as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.vy = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.vq as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.vq = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.vb;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.vb = null : this.i.vb = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.vi as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.vi = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.vi);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.vl as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.vl = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.vl);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.vo as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.vo = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.vo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.vn as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.vn = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.vn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.vm as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.vm = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.vm);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.vk as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.vk = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.vk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.vj as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.vj = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.vj);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.vd;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.vd = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.vd));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.vp as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.vp = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.vp);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.d8 as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.u1 as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.u1 = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.uw;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.uw = null : this.i.uw = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.uv;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.uv = null : this.i.uv = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.u6();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.uw as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.uw = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.ul as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.ul = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.ul);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.uk as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.uk = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.uk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.ud;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.ud = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.ud));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.uo as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.uo = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.uo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.un as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.un = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.un);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.ug;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.ug = null : this.i.ug = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.um as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.um = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.um);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cl = a;\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.uw = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected cl: GeographicShapeSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t\tthis.cl.wg = Defaults.aj;\r\n\t\t\tthis.cl.iu = Defaults.p;\r\n\t\t\tthis.cl.vf = Defaults.o;\r\n\t\t\tthis.cl.vc = Defaults.d;\r\n\t\t\tthis.cl.va = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tsuper.b5();\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).ye = this.cl.wi;\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).w7 = this.cl.vd;\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).xt = this.cl.vy;\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).xa = this.cl.vf;\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).wt = this.cl.u9;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).xt = this.cl.vy;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).xa = this.cl.vf;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).wt = this.cl.u9;\r\n\t}\r\n\tcr(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).w2 = this.cl.vc;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).ya = this.cl.wf;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).yb = this.cl.wg;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).yd = this.cl.wh;\r\n\t}\r\n\tct(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).w7 = this.cl.vd;\r\n\t}\r\n\tcu(): void {\r\n\t\t(<ScatterPolygonSeries>this.cl.t3).ye = this.cl.wi;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_e3(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\tve: GeographicShapeSeriesView;\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.ve = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected t2(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.vv));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.vw));\r\n\t\treturn a;\r\n\t}\r\n\tprivate vv(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate vw(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.t3);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tvd: StyleSelector;\r\n\twi: Style;\r\n\tvc: MarkerType;\r\n\tvb: MarkerOutlineMode;\r\n\tva: MarkerFillMode;\r\n\tvy: DataTemplate;\r\n\twf: Brush;\r\n\twg: Brush;\r\n\twh: Style;\r\n\tvf: number;\r\n\ths(): number {\r\n\t\treturn this.vf;\r\n\t}\r\n\tsz(): Brush {\r\n\t\treturn this.wd;\r\n\t}\r\n\ts0(): Brush {\r\n\t\treturn this.we;\r\n\t}\r\n\tqv(): DataTemplate {\r\n\t\treturn this.vx;\r\n\t}\r\n\tkx(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.t3);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.kx();\r\n\t}\r\n\tu9: CollisionAvoidanceType;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.t3).w0 = this.vb;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.t3).ww = this.va;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.ve.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.ve.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.ve.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.ve.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.ve.cm();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.ve.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.ve.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.ve.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.ve.cu();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected iq(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tvx: DataTemplate;\r\n\twd: Brush;\r\n\twe: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:wd:vz', [ (<any>Brush).$ ], 'ActualMarkerOutline:we:v0', [ (<any>Brush).$ ], 'ActualMarkerTemplate:vx:v1', [ (<any>DataTemplate).$, null ], 'MarkerBrush:wf:v2', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:u9:v3', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:va:v4', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:vb:v5', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:wg:v6', [ (<any>Brush).$ ], 'MarkerStyle:wh:v7', [ (<any>Style).$ ], 'MarkerTemplate:vy:v8', [ (<any>DataTemplate).$, null ], 'MarkerThickness:vf:v9', [ 1, DeviceUtils.g(2) ], 'MarkerType:vc:wa', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:wi:wb', [ (<any>Style).$, null ], 'ShapeStyleSelector:vd:wc', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.e3 as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.wi ? (this.i.wi.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.wi.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.wi ? (this.i.wi.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.wi.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.wi ? (this.i.wi.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.wi.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.wi.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.wi ? (this.i.wi.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.wi.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.wi.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.wi) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.wi = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.vc;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.vc = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.vc));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.vb;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.vb = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.vb));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.va;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.va = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.va));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.vy as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.vy = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.wf);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.wf = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.wf));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.wg);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.wg = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.wg));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.vf as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.vf = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.vf);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.u9;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.u9 = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.u9));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.vx as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.vx = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.wd);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.wd = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.wd));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.we);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.we = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.we));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.ch = a;\r\n\t}\r\n\tprivate ch: GeographicSymbolSeries = null;\r\n\tau(): void {\r\n\t\tsuper.au();\r\n\t\tif (!this.q) {\r\n\t\t}\r\n\t}\r\n\tb5(): void {\r\n\t\tlet a = <ScatterSeries>this.ch.t3;\r\n\t\tsuper.b5();\r\n\t\ta.xl = this.ch.vr;\r\n\t\ta.xt = this.ch.vp;\r\n\t\ta.ua = this.ch.ud;\r\n\t\ta.uw = this.ch.ut;\r\n\t\ta.uf = this.ch.ue;\r\n\t}\r\n\tcj(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).xl = this.ch.vr;\r\n\t}\r\n\tci(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).xt = this.ch.vp;\r\n\t}\r\n\tcp(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).ua = this.ch.ud;\r\n\t}\r\n\tcn(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).uw = this.ch.ut;\r\n\t}\r\n\tco(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).uf = this.ch.ue;\r\n\t}\r\n\tcq(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).w1 = this.ch.uf;\r\n\t}\r\n\tcs(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).xAxis = (<XamGeographicMap>this.ch.cy).ua;\r\n\t}\r\n\tct(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).yAxis = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tcr(): void {\r\n\t\tlet a = <ScatterSeries>this.ch.t3;\r\n\t\tif (this.ch.cy == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.ch.cy).ua;\r\n\t\ta.yAxis = (<XamGeographicMap>this.ch.cy).uc;\r\n\t}\r\n\tcl(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).vm = this.ch.vb;\r\n\t}\r\n\tck(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).vc = this.ch.u7;\r\n\t}\r\n\tcm(): void {\r\n\t\t(<ScatterSeries>this.ch.t3).vd = this.ch.u8;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected get_dx(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected cg(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\to0(a: SeriesView): void {\r\n\t\tsuper.o0(a);\r\n\t\tthis.ve = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\tve: GeographicSymbolSeriesView;\r\n\tprotected iq(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected t2(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate vd: ScatterSeries = null;\r\n\tvp: string;\r\n\tvr: string;\r\n\tvb: CollisionAvoidanceType;\r\n\tvi: boolean;\r\n\tvh: boolean;\r\n\tprotected vg: boolean = false;\r\n\tprotected vf: boolean = false;\r\n\tprotected get_es(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tvc: ScatterItemSearchMode;\r\n\tvk: number;\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.ve.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.ve.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.ve.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.ve.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.ve.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.ve.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.t3).wi = this.vi;\r\n\t\t\tthis.vg = this.vi;\r\n\t\t\tif (this.vi) {\r\n\t\t\t\tlet e = (<ScatterBase>this.t3);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.vw));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.t3);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.vw));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.t3).wh = this.vh;\r\n\t\t\tthis.vf = this.vh;\r\n\t\t\tif (this.vi) {\r\n\t\t\t\tlet g = (<ScatterBase>this.t3);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.vv));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.t3);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.vv));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.t3).v6 = this.vc;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.t3).w0 = this.vk;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate vw(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate vv(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tvj: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:vh:vx', [ 0, false ], 'IsCustomScatterStyleAllowed:vi:vy', [ 0, false ], 'ItemSearchMode:vc:vz', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:vk:v0', [ 1, 10000 ], 'LatitudeMemberPath:vp:v1', [ 2, null ], 'LongitudeMemberPath:vr:v2', [ 2, null ], 'MarkerCollisionAvoidance:vb:v3', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:vj:v4', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.dx as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.vp as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.vp = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.vr as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.vr = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.vb;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.vb = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.vb));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.vi as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.vi = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.vi);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.vh as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.vh = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.vh);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.vc;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.vc = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.vc));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.vk as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.vk = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.vk);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected get_fg(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget vb(): GeographicMapImagery {\r\n\t\treturn this.va;\r\n\t}\r\n\tset vb(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.vb;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.vb;\r\n\t\t\tthis.va = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate va: GeographicMapImagery = null;\r\n\tvf(): void {\r\n\t\tif (this.vb != null) {\r\n\t\t\tthis.vb.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected o8(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.o8(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.t3 != null) {\r\n\t\t\t\t(<TileSeries>this.t3).ww = this.vb;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate u9: TileSeries = null;\r\n\tprotected t8(): void {\r\n\t\tsuper.t8();\r\n\t\t(<TileSeries>this.t3).ww = this.vb;\r\n\t\tif (this.u9 != null) {\r\n\t\t\tlet a = this.u9;\r\n\t\t\ta.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.ve));\r\n\t\t}\r\n\t\tthis.u9 = <TileSeries>this.t3;\r\n\t\tif (this.u9 != null) {\r\n\t\t\tlet b = this.u9;\r\n\t\t\tb.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.ve));\r\n\t\t}\r\n\t}\r\n\tprotected t2(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate ve(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.fg as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.vb;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.vb = null : this.i.vb = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.vf();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.uf as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.uf = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.ud as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.ud = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.uc as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.uc = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.ui as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.ui = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.uk as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.uk = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.um as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.um = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.fg as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.ww;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.ww = null : this.i.ww = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","og","super","this","t3","constructor","t1","t2","get_eq","ju","a","b","c","lv","ds","d","ag","bj","t8","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","createFromInternal","Prefix","Postfix","_implementation","nr","t4","b5","ax","az","ay","a0","jr","jx","jf","jd","h9","th","ts","ak","tt","al","tu","tv","h5","td","h7","tf","ti","ia","te","h6","tg","h8","i9","h0","hw","js","cg","HostSeriesView","o0","$","t5","ua","h","o8","cy","o2","lr","pb","tw","index","n2","jl","e","S","actualWindowRectChanged","t9","f","t7","cr","b6","cd","ca","hs_","v_","_visibility","visibility","fk","expectFunctions","cf","b4","cc","b1","b2","ik","b9","hp","b3","cb","ce","title","b7","b8","legend","cj","av","tn","width","v2_","pp","po","au","p8","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","n1","jq","nm","$t","i","raisePropertyChanged","oldValue","newValue","b0","at","t0","itemsSource","sw","s2","io","ji","_opacity","iu","fy","legendItemBadgeShape","ba","ss","sv","GeographicMarkerSeries","propertyUpdated","ur","qv","us","sz","u5","s0","u6","hs","ue","kx","propertyName","uu","vb","va","$$p","vc","u7","vd","u8","uc","ub","ud","uw","ut","uf","w1","B","g","GeographicShapeSeriesBase","uj","ui","assigningShapeStyle","assigningShapeMarkerStyle","uh","GeographicShapeSeriesBaseView","get_es","get_du","ci","ck","u2","ul","uz","u1","uk","uy","uo","vj","un","vk","importCompleted","u0","j","count","ext_","ug","getPointData","get_gf","set_gf","ch","vw","vg","um","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","get_fg","wu","wt","imageTilesReady","wx","wy","ab","TileSeriesView","ws","get_u4","ww","wv","propertyChanged","dh","ol","w2","deferralHandler","dg","type","XamGeographicMap","geographicMap","w4","dd","dk","be","w","on","di","register","unRegister","deferredRefresh","deferAction","i4","setTimeout","window","qm","dj","pq","w3","getViewInfo","p0","p1","gu","item","a3","dl","wb","ao","isEmpty","height","nj","de","IMapRenderDeferralHandler","ShapeSeriesViewBase","da","GeometryGroup","dc","db","q","Defaults","an","add","c5","c6","c4","co","cm","cu","clear","ct","as","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","bx","toString","bd","imagesChanged","df","bf","a8","k","aa","r","clip","Math","round","left","top","o","getNativeElement","z","a6","SphericalMercatorVerticalScaler","VerticalLinearScaler","getMercatorUnscaledValue","p","getMercatorScaledValue1","af","values_","Array","isArray","v","x","y","m","n","s","t","u","ac","ah","sin","log","ai","aj","p3","l5","p4","l4","am","Rect","aq","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","l","SeriesViewer","uv","v6","v2","$type","NaN","v9","v8","empty","v7","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bi","nl","NumericYAxis","vh","vo","md","provideContainer","provideRenderer","fv","gh","eu","ev","l_op_Inequality","wf","wn","wl","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","vr","vq","wd","wc","ScalerParams","wa","tr","ej","intersect","getZoomFromGeographicPoints","wh","tq","em","v3","l8","v4","e4","v5","ve","GeographicMapImagery","clearTileCache","fj","vm","ee","series","vp","vl","pu","get_em","to","ty","floor","ceil","abs","we","d9","lo","Tuple$2","gl","MathUtil","tp","wg","XamGeographicMapView","n4","of","ph","vs","gr","gs","pg","min","fb","up","isHorizontalWrappingEnabled","vi","fu","fr","vn","uq","fs","ux","fi","ps","gk","c2","getFontInfo","fo","fw","getFontBrush","fx","o9","ItfConverter","triangulationSource","points","triangles","oz","pf","l1","vf","pn","ChartVisualData","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","wm","vt","DependencyProperty","PropertyMetadata","Control","ap","cancellingImage","downloadingImage","bb","GeographicMapImageryView","a5","a9","a4","a2","referer","userAgent","bg","geographicMapProperty","a7","bs","bn","bc","XamMultiScaleImage","Size","bz","GeographicXYTriangulatingSeriesView","u3","trianglesSource","cl","cn","GeographicScatterAreaSeriesView","cp","vy","cq","SeriesViewerView","fn","fz","fp","sn","hq","bk","bw","el","get_ap","d4","p2","BrushCollection","du","ae","dv","remove","ft","d1","fd","ad","fe","_stroke","fq","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_d8","triangulationStatusChanged","u4","vx","qd","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","specialize","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","by","getResponseCompleted","bind","bp","actualBingImageryRestUri","isInitialized","bingImageryRestUri","requestMapSettings","bv","isDeferredLoad","string","apiKey","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","registerCons","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","GeographicContourLineSeries","get_ew","ScatterContourSeries","vv","s7","s8","il","ta","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","registerElement","htmlTagName","isLineContour","ew","valueMemberPath","fillScale","_createFromInternal","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","wj","xh","xg","cs","GeographicHighDensityScatterSeries","ip","get_e1","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","e1","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","bu","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcArcGISOnlineMapImageryModule","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","isRegistered","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","_initializeAdapters","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","eq","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","u9","GeographicPolylineSeries","get_e4","styleShape","ScatterPolylineSeries","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","xl","xt","v0","zt","aaj","zj","z9","z4","zg","zr","zs","zy","zx","cv","cw","cz","cx","c0","c1","GeographicProportionalSymbolSeries","get_dx","assigningScatterStyle","assigningScatterMarkerStyle","iq","BubbleSeries","wi","w0","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","dx","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","d8","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","ye","w7","xa","ya","yb","yd","GeographicShapeSeries","get_e3","ScatterPolygonSeries","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","e3","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","fg","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}